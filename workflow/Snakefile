################################################################################
# SPARCS: A Snakemake Pipeline for RiboSNitch Prediction
#
# Author: Kobie Kirven
# Email: kjk6173@psu.edu
#
# Assmann and Bevilacqua Labs
# The Pennsylvania State University
################################################################################

# Import the python modules:
import os

# Get the location of this file:
location = os.getcwd()

# Get the path up to the SPARCS directory:
path = []
for ele in location.split("/"):
    if ele == "SPARCS":
        path.append(ele)
        break
    else:
        path.append(ele)

# Convert the path to a string:
path = "/".join(path)

# Config File
configfile: srcdir("config.yaml")


# Import Rules
include: "rules/chunk.smk"
include: "rules/snpeff.smk"
include: "rules/extract_seqs.smk"
include: "rules/ribosnitch_prediction.smk"
include: "rules/plot.smk"
include: "rules/vcf_header.smk"
include: "rules/download.smk"


# Load modules
import subprocess
import os

def prCyan(skk):
    """
    Print in cyan
    """
    print("\033[96m {}\033[00m".format(skk))

# Get the final output files
final_input = [f"{config['working_directory']}/{config['out_name']}/results/ribosnitch_predictions/combined_ribosnitch_prediction_{config['temperature']}.txt",
f"{config['working_directory']}/{config['out_name']}/results/ribosnitch_predictions/snpfold_scores_hist_t{config['temperature']}.jpg"]

if config['structure_prediction_tool'] == "RNAstructure":
    final_input = [f"{path}/scripts/data_tables/autodetect.txt"]

# Let the user know what files we are creating
prCyan("Creating the following files:")
prCyan("\t-" + "\n\t-".join(final_input))


#######################
#  --  Pipeline  --   #
#######################
rule all:
    input:
        final_input,
